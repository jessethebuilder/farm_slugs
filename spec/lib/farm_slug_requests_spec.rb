require 'spec_helper'

describe 'Farm Slug Requests', :type => :feature do
  Capybara.default_selector = :css
  #requests are based on typical Rails Scaffolding, as it was auto-generated by Rails 4.2.

  #reqeusts use a Model called FarmSlugTestObject and it has two attributes:
  # :caption, which is the :id_method; and :url_slug, which is the :slug_method

  let(:test_name){ 'The Name of Some Object or Article'}

  before(:each) do
  end

  describe 'Creating an Record that uses Farm Slugs' do
    it 'should save the object and then move to the show page' do
      manual_farm_slug_request_object_create(test_name)
      page.should have_content(test_name)
      current_path.should == "/farm_slug_request_objects/#{test_name.parameterize}"
    end

    it 'should save with the proper slug' do
      manual_farm_slug_request_object_create(test_name)

      visit "/farm_slug_request_objects/#{test_name.parameterize}"
      page.status_code.should == 200
      page.should have_content(test_name)
    end

    it 'should list the new object on #index' do
      
      manual_farm_slug_request_object_create(test_name)
      visit '/farm_slug_request_objects'
      page.should have_content(test_name)
    end

    describe 'Validation Requests for new objects (unsaved)' do
      before(:each) do
        visit '/farm_slug_request_objects/new'
      end

      specify 'page should not have repeated warnings. This spec came up because of the tendency to validate the
               presence of the :id method on the Model, but that is already done on FarmSlugs' do
        click_button 'Create'
        # within('.field_with_errors has_errors') do
          page.should_not have_content("can't be blank;can't be blank")
        # end
      end
    end #validation Requests for new
  end

  describe 'Editing an Existing Record' do
    let!(:fsto){ create :farm_slug_request_object }
    # let(:path){  }


  end
end